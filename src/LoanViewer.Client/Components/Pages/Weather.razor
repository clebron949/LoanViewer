@page "/weather"
@attribute [StreamRendering]
@inject IConfiguration Configuration
@inject HttpClient HttpClient

<PageTitle>Loan Data</PageTitle>

<h1 class="text-center">Loan Summary</h1>

<div class="row justify-content-center gap-5 gap-md-0 my-5">
    <div class="col-md-4 col-lg-3">
        <div class="border-start border-5 rounded-3 border-danger">
            <div class="border border-1 rounded py-3">
                <span class="text-black-50 small px-3">Monthly Payment</span>
                <div class="fs-2 text-center">
                    @data?.MonthlyPayment.ToString("C")
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-3">
        <div class="border-start border-5 rounded-3 border-danger">
            <div class="border border-1 rounded py-3">
                <span class="text-black-50 small px-3">Yearly Payment</span>
                <div class="fs-2 text-center">
                    @data?.YearlyPayment.ToString("C")
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 col-lg-3">
        <div class="border-start border-5 rounded-3 border-danger">
            <div class="border border-1 rounded py-3">
                <span class="text-black-50 small px-3">Total Interest Paid</span>
                <div class="fs-2 text-center">
                    @data?.TotalInterest.ToString("C")
                </div>
            </div>
        </div>
    </div>
</div>

@if (data == null)
{
    <p><em>Loading ...</em></p>
}
else
{
    <div class="table-responsive">
    <table class="table text-center table-hover border">
        <thead>
            <tr class="">
                <th>Term</th>
                <th>Beggining Balance</th>
                <th>Interest Paid</th>
                <th>Principal Paid</th>
                <th>Remaining Principal</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in data.AmortizationTableItems)
                {
                    <tr>
                        <td>@item.Term</td>
                        <td><span>@item.BeginningBalance.ToString("C")</span></td>
                        <td><span>@item.InterestPaid.ToString("C")</span></td>
                        <td><span>@item.PrincipalPaid.ToString("C")</span></td>
                        <td><span>@item.RemainingPrincipal.ToString("C")</span></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private Response? data;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        data = Configuration.GetSection("Data").Get<Response>() ?? new Response();
    }

    public class Response
    {
        public double MonthlyPayment { get; set; }
        public double YearlyPayment { get; set; }
        public double TotalInterest { get; set; }
        public List<AmortizationTableItem> AmortizationTableItems { get; set; } = [];
    }

    public class AmortizationTableItem
    {
        public int Term { get; set; }
        public double BeginningBalance { get; set; }
        public double InterestPaid { get; set; }
        public double PrincipalPaid { get; set; }
        public double RemainingPrincipal { get; set; }
    }

}
